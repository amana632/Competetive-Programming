spoj/PHT - sqrt function
spoj/IEEEBGAM - setprecision(8) , #include <iomanip>, 		cout<<fixed<<setprecision(8)<<x<<endl; use double instead of float
spoj/FCTRL2
spoj/SILVER - mast ques (logarithmic)
spoj/KURUK14


sorting vectors of pair
// Using simple sort() function to sort 
    sort(vect.begin(), vect.end()); 
 
    // Using sort() function to sort by 2nd element 
    // of pair 
    sort(vect.begin(), vect.end(), sortbysec);
    bool sortbysec(const pair<int,int> &a, 
              const pair<int,int> &b) 
{ 
    return (a.second < b.second); 
} 

Good ques:(codeforces div2 A ladder)
Twins
Dima and Continuous Line ****



class Solution {
public:
    vector<vector<int>> matrixBlockSum(vector<vector<int>>& mat, int k) {
        if (mat.empty() || mat[0].empty())
            return {};
        vector<vector<int>> ans;
        vector<vector<int>> arr;
        
        int n=mat[0].size();
        int m=mat.size();
        
        arr[0][0]=mat[0][0];
        
//         for(int i=1;i<n;i++){
//             arr[0][i]=arr[0][i-1]+mat[0][i];
//             cout<<arr[0][i]<<endl;}
        
//         for(int i=1;i<m;i++){
//             arr[i][0]=arr[i-1][0]+mat[i][0];
//              cout<<arr[i][0]<<endl;
//         }
        
        // for(int i=1;i<n;i++){
        //     for(int j=1;j<m;j++){
        //         arr[i][j]=arr[i-1][j]+arr[i][j-1]-arr[i-1][j-1]+mat[i][j];
        //     }
        // }
        //    for(int i=0;i<n;i++){
        //     for(int j=0;j<m;j++){
        //         cout<<arr[i][j]<<endl;
        //     }
        // }
        // for(int i=0;i<n;i++){
        //     for(int j=0;j<m;j++){
        //         if(i+k<n&&j+k<m)
        //         ans[i][j]=mat[i+k][j+k];
        //         else if(i+k>n-1&&j+k>m-1) ans[i][j]=mat[n-k][m-k]-mat[k-1][k-1];
        //         else if(i+k>n-1)ans[i][j]=mat[n-k][j+k]-mat[k-1][j+k];
        //         else if(j+k>m-1)ans[i][j]=mat[i+k][m-k]-mat[i+k][k-1];
        //     }
        // }
        return ans={};
    }
};